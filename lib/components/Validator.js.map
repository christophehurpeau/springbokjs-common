{"version":3,"sources":["../../src/components/Validator.js"],"names":[],"mappings":"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","file":"src/components/Validator.js","sourcesContent":["//TODO springbokjs-validator\n/*\nS.extendPrototype(Validator, {\n    validParams() {\n        this.error = function(){ throw S.HttpError.notFound();};\n    },\n    error(msg) {\n        this._errors.push(msg);\n    },\n    getErrors() {\n        return this._errors;\n    },\n    hasErrors() {\n        return !!this._errors;\n    },\n    isValid() {\n        return !this._errors;\n    }\n});\n*/\n\nclass ParamValueValidator {\n    constructor(validator, name, value) {\n        this.validator = validator;\n        this.name = name;\n        this.value = value;\n    }\n    _error(key) {\n        this.validator._error(this.name, key, this.value);\n    }\n}\n\nclass ParamValueStringValidator extends ParamValueValidator {\n    notEmpty() {\n        if (this.value == null || S.string.isEmpty(this.value)) {\n            this._error('notEmpty');\n        }\n        return this;\n    }\n}\n\nclass ParamValueModelValidator extends ParamValueValidator {\n    required() {\n        if (this.value == null) {\n            this._error('required');\n        }\n        return this;\n    }\n    valid(fieldsRequired) {\n        if (this.value == null) {\n            return this;\n        }\n        if (S.isString(fieldsRequired)) {\n            fieldsRequired = fieldsRequired.split(' ');\n        }\n        S.forEach(this.value.constructor.Fields, (name, fModel) => {\n            var value = this.value[name];\n            if (fieldsRequired) {\n                if(S.array.has(fieldsRequired, name) && value == null) {\n                    this._error('required');\n                }\n            } else {\n                if (value == null && fModel[1] && fModel[1].required) {\n                    this._error('required');\n                }\n            }\n            //TODO ...\n        });\n        return this;\n    }\n}\n\n\nclass ParamValidator {\n    constructor(request) {\n        this.request = request;\n    }\n    _error(name, key, value){\n        if (!this._errors) {\n            this._errors = {};\n        }\n        this._errors[name] = {error: key, value: value};\n    }\n    getErrors(){\n        return this._errors;\n    }\n    hasErrors(){\n        return !!this._errors;\n    }\n    isValid(){\n        return !this._errors;\n    }\n\n    string(name, position) {\n        return new ParamValueStringValidator(this, name, this.request.param(name, position));\n    }\n    int(name, position){\n        return new ParamValueIntValidator(this, name, this.request.param(name, position));\n    }\n    model(modelName, name){\n        name = name || S.string.lcFirst(modelName);\n        console.log('paramvalidator model', modelName, M[modelName]);\n        var data = this.request.getOrPostParam(name);\n        return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n    }\n}\n\nclass ParamValidatorValid extends ParamValidator{\n    _error() {\n        /*#if DEV*/ console.warn('Invalid params: ', arguments,\n            \"\\nRoute=\" , this.request.route,\n            \"\\nGET=\", this.request.query,\n            \"\\nBody=\", this.request.body);\n        /*#/if*/\n        throw S.HttpError.notFound();\n    }\n}\n\n\nmodule.exports = {\n    requestMethods: {\n        param(name, position) {\n            return this.namedParam(name) || ( position && this.otherParam(position) ) || this.paramGET(name);\n        },\n        namedParam(name) {\n            var namedParams = this.route.namedParams;\n            return namedParams && namedParams.get(name);\n        },\n        otherParam(position) {\n            var otherParams = this.route.otherParams;\n            return otherParams && otherParams[position - 1];\n        },\n        paramGET(name) {\n            var query = this.query;\n            return query && query[name];\n        },\n        paramGETorPOST(name) {\n            return this.body[name] !== undefined ? this.body[name] : this.query[name];\n        },\n        validator() {\n            return new ParamValidator(this);\n        },\n        validParams() {\n            return new ParamValidatorValid(this);\n        }\n    }\n};\n"]}